CREATE DATABASE IF NOT EXISTS UMS;

USE UMS;

CREATE TABLE IF NOT EXISTS UMS_USER (
	USER_ID					INT NOT NULL AUTO_INCREMENT,
	USER_ACCESS_KEY			VARCHAR(50) NOT NULL UNIQUE,
	USERNAME				VARCHAR(50) NOT NULL,
	PASSWORD				VARCHAR(90) NOT NULL,
	USER_TYPE				INT(1) NOT NULL,
	USER_STATUS				INT(2) NOT NULL,
	ADDITIONAL_ID			VARCHAR(100),
	USER_CREATION_STAMP		DATETIME NOT NULL,
	USER_CREATED_BY			INT,
	USER_UPDATED_STAMP		DATETIME NOT NULL,
	USER_UPDATED_BY			INT,
	PRIMARY KEY (USER_ID)
);

CREATE TABLE IF NOT EXISTS UMS_USER_DETAILS (
	USER_ID					INT NOT NULL,
	USER_FIRST_NAME			VARCHAR(100),
	USER_LAST_NAME			VARCHAR(100),
	USER_ALIAS				VARCHAR(50),
	USER_ADDRESS			VARCHAR(500),
	PRIMARY_PHONE			VARCHAR(30),
	PRIMARY_EMAIL			VARCHAR(100),
	ALTERNATE_PHONE			VARCHAR(30),
	ALTERNATE_EMAIL			VARCHAR(100),
	GENDER					INT(1),
	DATE_OF_BIRTH_STAMP		DATE,
	ANNIVERSARY_STAMP		DATE,
	FOREIGN KEY (USER_ID) REFERENCES UMS_USER(USER_ID)
);

CREATE TABLE IF NOT EXISTS UMS_LOGIN_DETAILS (
	USER_ID							INT NOT NULL,
	SYSTEM_SESSION_ID				VARCHAR(50) NOT NULL,
	NATIVE_TOKEN					VARCHAR(100),
	LOGIN_TIME						DATETIME NOT NULL,
	ACCESS_IP						VARCHAR(45),
	ACCESS_PORT						VARCHAR(5),
	ACCESS_GATEWAY					VARCHAR(45),
	ACTUAL_ACCESS_IP				VARCHAR(45),
	DEVICE_TYPE						VARCHAR(100),
	OPERATING_SYSTEM				VARCHAR(100),
	OPERATING_SYSTEM_MANUFACTURER	VARCHAR(100),
	BROWSER_NAME					VARCHAR(100),
	BROWSER_VERSION					VARCHAR(100),
	BROWSER_MANUFACTURER			VARCHAR(100),
	BROWSER_TYPE					VARCHAR(100),
	BROWSER_RENDERING_ENGINE		VARCHAR(100),
	PRIMARY KEY (SYSTEM_SESSION_ID),
	FOREIGN KEY (USER_ID) REFERENCES UMS_USER(USER_ID)
);

CREATE TABLE IF NOT EXISTS UMS_SESSION_DETAILS (
	USER_ID					INT NOT NULL,
	SYSTEM_SESSION_ID		VARCHAR(50) NOT NULL,
	SESSION_STATUS			INT(2) NOT NULL,
	NATIVE_TOKEN			VARCHAR(100),
	PRIMARY KEY (SYSTEM_SESSION_ID),
	FOREIGN KEY (USER_ID) REFERENCES UMS_USER(USER_ID)
);

CREATE TABLE IF NOT EXISTS UMS_USER_VERIFICATION (
	USER_ID					INT NOT NULL,
	VERIFICATION_CODE		VARCHAR(100) NOT NULL,
	FOREIGN KEY (USER_ID) REFERENCES UMS_USER(USER_ID)
);

CREATE TABLE IF NOT EXISTS UMS_ROLE (
	ROLE_ID				INT NOT NULL AUTO_INCREMENT,
	ROLE_NAME			VARCHAR(50) NOT NULL,
	ROLE_DESCRIPTION	VARCHAR(500),
	ROLE_AREA			INT(2) NOT NULL,
	ROLE_STATUS			INT(2) NOT NULL,
	ADDITIONAL_ID		VARCHAR(100),
	ROLE_CREATION_TIME	DATETIME NOT NULL,
	ROLE_CREATED_BY		INT NOT NULL,
	ROLE_UPDATED_TIME	DATETIME NOT NULL,
	ROLE_UPDATED_BY		INT NOT NULL,
	PRIMARY KEY (ROLE_ID)
);

CREATE TABLE IF NOT EXISTS UMS_USER_ROLE_MAP (
	USER_ID			INT NOT NULL,
	ROLE_ID			INT NOT NULL,
	FOREIGN KEY (USER_ID) REFERENCES UMS_USER(USER_ID),
	FOREIGN KEY (ROLE_ID) REFERENCES UMS_ROLE(ROLE_ID)
);

CREATE TABLE IF NOT EXISTS UMS_OPTION (
	OPTION_ID				INT NOT NULL AUTO_INCREMENT,
	OPTION_NAME				VARCHAR(25) NOT NULL,
	OPTION_DESCRIPTION		VARCHAR(200),
	OPTION_TYPE				INT(2) NOT NULL,
	OPTION_AREA				INT(2) NOT NULL,
	OPTION_STATUS			INT(2) NOT NULL,
	OPTION_LINK				VARCHAR(200) NOT NULL DEFAULT '#',
	OPTION_ICON				VARCHAR(100),
	OPTION_ORDER			INT(2) NOT NULL DEFAULT 0,
	PARENT_OPTION_ID		INT NOT NULL,
	ENABLE_TOOLBOX			TINYINT(1) NOT NULL DEFAULT 0,
	OBJECT_REFERENCE_KEY	VARCHAR(100),
	PRIMARY KEY (OPTION_ID)
);

CREATE TABLE IF NOT EXISTS UMS_ROLE_OPTION_MAP (
	ROLE_ID				INT NOT NULL,
	OPTION_ID			INT NOT NULL,
	ENABLE				TINYINT(1) NOT NULL
);
